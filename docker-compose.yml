version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  broker1:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - kafka-network

  broker2:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker2
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - broker1
      - broker2
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker1:29092,broker2:29093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - kafka-network

  minio:
    image: bitnami/minio:latest
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./minio_data:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=adminadmin!!
      - MINIO_DEFAULT_BUCKETS=default
      - MINIO_SERVER_HOST=0.0.0.0
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
      - MINIO_CONSOLE_ADDRESS=:9001
    networks:
      - kafka-network

  kafka-producer:
    build:
      context: ./kafka-producer
    container_name: kafka-producer
    depends_on:
      - broker1
      - broker2
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker1:29092,broker2:29093
    networks:
      - kafka-network
    volumes:
      - ./data:/data

  kafka-consumer1:
    build:
      context: ./kafka-consumer
    container_name: kafka-consumer1
    depends_on:
      - broker1
      - broker2
      - minio
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker1:29092,broker2:29093
      KAFKA_TOPIC: topic1
      SPRING_KAFKA_CONSUMER_GROUP_ID: consumer-group-1
      SERVER_PORT: 8082
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: adminadmin!!
      MINIO_BUCKET: default
    networks:
      - kafka-network
    volumes:
      - ./consumer1_data:/csv_files

  kafka-consumer2:
    build:
      context: ./kafka-consumer
    container_name: kafka-consumer2
    depends_on:
      - broker1
      - broker2
      - minio
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker1:29092,broker2:29093
      KAFKA_TOPIC: topic2
      SPRING_KAFKA_CONSUMER_GROUP_ID: consumer-group-2
      SERVER_PORT: 8083
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: adminadmin!!
      MINIO_BUCKET: default
    networks:
      - kafka-network
    volumes:
      - ./consumer2_data:/csv_files

networks:
  kafka-network:
    driver: bridge

volumes:
  minio_data:
    driver: local
